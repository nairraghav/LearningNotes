Reasons to Force Push
    Local version is better than the remote version
    Remote version went wrong and needs repeair
    Versions have diverged and merging is undesirable

How To Force Push
    git push -f 
    git push --force

Force Pushing To A Remote
    Use with extreme caution
    Easy way to anger your whole development team
    Disruptive for others using the remote branch
    Commits disappear
    Subsequent commits are orphaned

Identify Merged Branches
    List branches that have been merged into a branch
    Useful for knowing what features have been incorporated
    Useful for cleanup after merging many features
    Uses the current branch by default
    "Branches whose tips are reachable from the specified commit (HEAD if not specified)"
    Branch tip is in the history of the specified commit
    Can specify other branch names or commits

How To Check For Merged Branches
    git branch --merged (shows local branches merged into current branch)
    git branch --no-merged (shows local branches not merged into current branch)
    git branch -r --merged (shows remote branches merged into current branch)
    git branch --merged HEAD
    git branch --merged july_release (starts at tip july_release, we can also use commit hashes)

Delete Local and Remote Branches
    Local Branch
        # must be on different branch from branch to be deleted
            git branch -d branch_name (this deletes the local branch, checks to see if unmerged)
            git branch -D branch_name (this will delete the branch even if it is unmerged)
    Remote Branch
        git push --delete origin new_feature (this deletes the new_feature remote branch)
        git push -d origin new_feature (same as above but quicker)
        git push origin :new_feature (same as above -- max quickness)

Create And Checkout New Branch
    git checkout -b new_branch (creates new_branch and checks it out)

Add & Commit Staged Files
    git commit -am "change commit details" (this will add all unstaged stages into the commit and create it)

Stale Branch
    A remote-tracking branch that no longer tracks anything because the actual branch in the remote repository has been deleted

Remote-Tracking Branch
    The branch on your local machine that represents the remote branch (origin/remote-branch)

When remote branches are deleted, our remote-tracking branches are not removed, we must do this manually

Pruning Remote-Tracking Branches
    git remote prune origin (deletes stale remote-tracking branches)
    git remote prune origin --dry-run (allows us to see would happen without actually doing so)
    git fetch --prune (prune and then fetch)
    git config --global fetch.prune true (this will change your settings so that upon fetch, git will prune)

Tags
    Tags allow marking points in history as important
    A named reference to a commit
    Most often used to mark releases (v1.0, v1.1, v2.0)
    Can mark key features or changes (ecommerce, redesign)
    Can mark points for team discussion (bug, issue136)

Creating Tags
    git tag issue136 git-commit-sha (adds a lightweight tag)
    git tag -a v1.1 -m "Version 1.0" git-commit-sha (adds an annotated tag -- most common)

List Tags
    git tag (lists tags)
    git tag --list (lists tags)
    git tag -l (lists tags)
    git tag -l "v2*" (lists all tags beginning with v2)
    git tag -l -n (list tags with annotations)
    git show v1.1
    git diff v1.0..v1.1

Delete Tags
    git tag --delete v1.1 (delete a tag)
    git tag -d v1.1 (delete a tag)

Pushing Tags To Remote
    Like branches, tags are local unless shared to a remote
    git push does *not* transfer tags
    Tags must be explicitly transferred
    git fetch will automatically retrieve shared tags
    git push origin tag-name (pushes the tag to the remote server)
    git push origin --tags (pushes ALL tags to a remote server)
    git fetch (fetch commits and tags)
    git fetch --tags (Fetches only tags -- with necessary commits)

Deleting Remote Tags
    git push origin :tag-name (deletes remote tag)
    git push --delete origin tag-name (deletes remote tag)
    git push -d origin tag-name (deletes remote tag)

